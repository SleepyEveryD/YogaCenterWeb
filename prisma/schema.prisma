// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

model Course {
  id             BigInt      @id @default(autoincrement())
  name           String?
  description    String?     @default("There is no description")
  Type           String      @default("NULL")
  img            String[]
  star           Boolean?    @default(false)
  price          Decimal
  oldPrice       Decimal?    @db.Decimal
  maximumStudent Int?        @default(30) // 新增的最大学生数字段，默认值30
  orderItems     OrderItem[]
  Teach          Teach[]

  @@map("Course")
}

// 其他模型保持不变...
model Teacher {
  id          BigInt  @id @default(autoincrement())
  name        String?
  surname     String?
  description String?
  img         String?
  CV          String? @map("CV")
  Teach       Teach[]

  @@map("Teacher")
}

model Teach {
  id      BigInt  @id @default(autoincrement())
  teacher BigInt
  course  BigInt
  Teacher Teacher @relation(fields: [teacher], references: [id])
  Course  Course  @relation(fields: [course], references: [id])

  @@map("Teach")
}

model Orders {
  id         BigInt      @id @default(autoincrement())
  userId     String      @db.Uuid
  stripeId   String
  name       String
  address    String
  zipcode    String
  city       String
  country    String
  created_at DateTime?   @default(now()) @db.Timestamptz(6)
  orderItems OrderItem[]

  @@map("Orders")
}

model OrderItem {
  id         BigInt    @id @default(autoincrement())
  orderId    BigInt
  courseId   BigInt
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  order      Orders    @relation(fields: [orderId], references: [id])
  course     Course    @relation(fields: [courseId], references: [id])

  @@map("OrderItem")
}
